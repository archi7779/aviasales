{"version":3,"sources":["serviceWorker.js","actions/index.js","components/styledComponents/index.js","components/SearchWindow.jsx","components/MainLogo.jsx","components/Ticket.jsx","components/OutPutWindow.jsx","App.jsx","reducers/functionsToUse.js","reducers/index.js","index.jsx"],"names":["Boolean","window","location","hostname","match","handleRadio","createAction","getTicketsStateRequest","getTicketsStateSuccess","getTicketsFailure","filterTickets","saveTicketsToState","handleSortBClick","AppWrapper","styled","div","RadioBWrapper","StyledTicket","Card","OutPutWindowWrapper","MainLogoWrapper","MainLogoImg","img","actionCreators","actions","SearchWindow","props","state","this","transFilter","className","value","onClick","event","target","checked","all","React","Component","connect","transplantationFilter","MainLogo","src","alt","Ticket","getArravialDate","dateStart","duration","arivalDateMilisec","Date","parse","arrivalHours","format","arrivalMinutes","startHours","startMinutes","getTimeInSky","minutes","getTransactionsString","stops","length","getTrasactionsABR","join","ticketInfo","price","segments","carrier","formatPrice","toLocaleString","useGrouping","urlLogo","wayForward","wayBack","title","extra","origin","destination","date","getTickets","dispatch","a","async","axios","get","firstRes","searchId","data","receeiveTickets","secondRes","stop","response","status","sortWith","prevProps","tickets","ticketsStatus","filteredTickets","type","size","slice","map","ticket","key","App","OutPutWindow","sort","filteredAndSortedTickets","first","second","handleActions","payload","0","1","2","3","activeFilters","_","activeFiltersAsArray","Object","keys","includes","onlySort","filters","filter","tempFiltered","flight","numOfTransplantations","toString","filterAndSort","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a922c4ef.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createAction } from 'redux-actions';\nimport axios from 'axios';\n\nexport const handleRadio = createAction('HANDLE_RADIO_BUTTON');\n\nexport const getTicketsStateRequest = createAction('GET_TICKETS_IN_REQUEST');\nexport const getTicketsStateSuccess = createAction('GET_TICKETS_SUCCESS');\nexport const getTicketsFailure = createAction('GET_TICKETS_FAILURE');\n\nexport const filterTickets = createAction('FILTER_TICKETS_IN_STATE');\nexport const saveTicketsToState = createAction('SAVE_TICKETS_TO_STATE');\n\nexport const getTickets = () => async dispatch => {\n  dispatch(getTicketsStateRequest());\n  const firstRes = await axios.get('https://front-test.beta.aviasales.ru/search');\n  const { searchId } = firstRes.data;\n  const receeiveTickets = async () => {\n    try {\n      const secondRes = await axios.get(\n        `https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`\n      );\n      dispatch(saveTicketsToState(secondRes.data));\n      if (!secondRes.data.stop) {\n        await receeiveTickets();\n      } else {\n        dispatch(getTicketsStateSuccess());\n      }\n    } catch (error) {\n      // тут видимо можно замутить обработку на коды ответа, чтобы если что не получился бесконечный цикл, при отключенном сервере\n      if (error.response.status === 404) {\n        dispatch(getTicketsFailure());\n        return;\n      }\n      await receeiveTickets();\n    }\n  };\n  await receeiveTickets();\n};\n\nexport const handleSortBClick = createAction('SORT_BUTTON_CLICKED');\n","import styled from 'styled-components';\nimport { Card } from 'antd';\n\nexport const AppWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: center;\n  width: 100%;\n  padding: 0 20px;\n  background-color: #e5e5e5;\n`;\n\nexport const RadioBWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 232px;\n  background-color: #fff;\n  height: 252px;\n  margin-top: 20px;\n  .RadioBItem {\n    padding-top: 18px;\n    padding-left: 18px;\n  }\n`;\n\nexport const StyledTicket = styled(Card)`\n  width: 500px;\n  @media (max-width: 505px) {\n    width: 100%;\n  }\n`;\nexport const OutPutWindowWrapper = styled.div`\n    margin: 0 20px;\n    display:flex;\n    width: 500px;\n     @media (max-width: 505px) {\n         margin: 0;  \n         width:100%;\n     } \n    flex-direction: column;\n    justify-content: center;\n    .OutPut-button {\n        width:50%;\n        height: 50px;\n        margin-bottom: 20px;\n        margin-top: 20px;\n    }\n    .OutPut-loader {\n        display:flex;\n        justify-content: center;\n        align-content: center;\n        margin-top: -15px;\n        width: 500px;\n        @media (max-width: 505px) {\n            width: 100%;\n         }\n    } \n    .mainTicketWrapper {\n        padding-bottom: 20px;\n    }\n    .ticketWrapper {  \n        display: flex\n        flex-direction: row\n        flex-wrap: wrap\n     }\n    .greyText {  \n        color: #A0B0B9\n        width: 30%\n        display: block\n    }\n    .blackText { \n         color: #4A4A4A\n         width: 30%\n         display: block\n    }\n    .centred {  \n        text-align: center\n    }\n\n     \n`;\n\nexport const MainLogoWrapper = styled.div`\n  width: 100%;\n  padding-bottom: 30px;\n  margin-top: 50px;\n`;\n\nexport const MainLogoImg = styled.img`\n  width: 60px;\n  height: 60px;\n  display: block;\n  margin: 0 auto;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Radio } from 'antd';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions';\nimport { RadioBWrapper } from './styledComponents';\n\nconst mapStateToProps = state => {\n  const props = {\n    transFilter: state.transplantationFilter,\n  };\n  return props;\n};\n\nconst actionCreators = {\n  handleRadio: actions.handleRadio,\n};\n\nclass SearchWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { handleRadio, transFilter } = this.props;\n    return (\n      <RadioBWrapper>\n        <span className=\"RadioBItem\">Количесвто Пересадок</span>\n        <Radio\n          value=\"all\"\n          onClick={event => handleRadio(event.target.value)}\n          checked={transFilter.all}\n          className=\"RadioBItem radio\"\n        >\n          Все\n        </Radio>\n        <Radio\n          value=\"0\"\n          onClick={event => handleRadio(event.target.value)}\n          checked={transFilter[0]}\n          className=\"RadioBItem radio\"\n        >\n          Без пересадок\n        </Radio>\n        <Radio\n          value=\"1\"\n          onClick={event => handleRadio(event.target.value)}\n          checked={transFilter[1]}\n          className=\"RadioBItem radio\"\n        >\n          1 Пересадка\n        </Radio>\n        <Radio\n          value=\"2\"\n          onClick={event => handleRadio(event.target.value)}\n          checked={transFilter[2]}\n          className=\"RadioBItem radio\"\n        >\n          2 Пересадки\n        </Radio>\n        <Radio\n          value=\"3\"\n          onClick={event => handleRadio(event.target.value)}\n          checked={transFilter[3]}\n          className=\"RadioBItem radio\"\n        >\n          3 Пересадки\n        </Radio>\n      </RadioBWrapper>\n    );\n  }\n}\n\nSearchWindow.propTypes = {\n  handleRadio: PropTypes.func.isRequired,\n  transFilter: PropTypes.objectOf(PropTypes.bool).isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(SearchWindow);\n","import React from 'react';\nimport { MainLogoWrapper, MainLogoImg } from './styledComponents';\n\nconst MainLogo = () => {\n  return (\n    <MainLogoWrapper>\n      <MainLogoImg src=\"./Logo.png\" alt=\"logo\" />\n    </MainLogoWrapper>\n  );\n};\n\nexport default MainLogo;\n","import React from 'react';\nimport { format } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport { StyledTicket } from './styledComponents';\n\nexport default class Ticket extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getArravialDate = (dateStart, duration) => {\n    const arivalDateMilisec = Date.parse(dateStart) + duration * 60000;\n    const arrivalHours = format(new Date(arivalDateMilisec), 'HH');\n    const arrivalMinutes = format(new Date(arivalDateMilisec), 'mm');\n    const startHours = format(new Date(Date.parse(dateStart)), 'HH');\n    const startMinutes = format(new Date(Date.parse(dateStart)), 'mm');\n    return `${startHours}:${startMinutes} - ${arrivalHours}:${arrivalMinutes}`;\n  };\n\n  getTimeInSky = duration => {\n    const minutes = duration % 60;\n    const hours = (duration - minutes) / 60;\n    return `${hours}ч ${minutes}м`;\n  };\n\n  getTransactionsString = stops => {\n    if (stops.length === 0) {\n      return 'БЕЗ ПЕРЕСАДОК';\n    }\n    if (stops.length === 1) {\n      return '1 ПЕРЕСАДКА';\n    }\n    if (stops.length === 2) {\n      return '2 ПЕРЕСАДКИ';\n    }\n    if (stops.length === 3) {\n      return '3 ПЕРЕСАДКИ';\n    }\n    return 'mistake';\n  };\n\n  getTrasactionsABR = stops => {\n    return stops.length > 0 && stops.join(', ');\n  };\n\n  render() {\n    const {\n      ticketInfo: { price, segments, carrier },\n    } = this.props;\n    const formatPrice = price.toLocaleString('ru', {\n      useGrouping: true,\n    });\n    const urlLogo = `//pics.avs.io/99/36/${carrier}.png`;\n    const wayForward = segments[0];\n    const wayBack = segments[1];\n\n    return (\n      <div className=\"mainTicketWrapper\">\n        <StyledTicket title={`${formatPrice} Р`} extra={<img alt=\"s7Logo\" src={urlLogo} />}>\n          <div className=\"ticketWrapper\">\n            <span className=\"greyText\">{`${wayForward.origin}-${wayForward.destination}`}</span>\n\n            <span className=\"greyText centred\">В ПУТИ</span>\n\n            <span className=\"greyText\">{this.getTransactionsString(wayForward.stops)}</span>\n\n            <span className=\"blackText\">\n              {this.getArravialDate(wayForward.date, wayForward.duration)}\n            </span>\n\n            <span className=\"blackText centred\">{this.getTimeInSky(wayForward.duration)}</span>\n\n            <span className=\"blackText\">{this.getTrasactionsABR(wayForward.stops)}</span>\n\n            <span className=\"greyText\">{`${wayBack.origin}-${wayBack.destination}`}</span>\n\n            <span className=\"greyText centred\">В ПУТИ</span>\n\n            <span className=\"greyText\">{this.getTransactionsString(wayBack.stops)}</span>\n\n            <span className=\"blackText\">\n              {this.getArravialDate(wayBack.date, wayBack.duration)}\n            </span>\n\n            <span className=\"blackText centred\">{this.getTimeInSky(wayBack.duration)}</span>\n\n            <span className=\"blackText\">{this.getTrasactionsABR(wayBack.stops)}</span>\n          </div>\n        </StyledTicket>\n      </div>\n    );\n  }\n}\n//\nTicket.propTypes = {\n  ticketInfo: PropTypes.shape({\n    price: PropTypes.number.isRequired,\n    carrier: PropTypes.string.isRequired,\n    segments: PropTypes.array.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Spin } from 'antd';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions';\nimport Ticket from './Ticket';\nimport { OutPutWindowWrapper } from './styledComponents';\n\nconst mapStateToProps = state => {\n  const props = {\n    transFilter: state.transplantationFilter,\n    ticketsStatus: state.ticketsStatus,\n    tickets: state.tickets,\n    sortWith: state.sortWith,\n    filteredTickets: state.filteredTickets,\n  };\n  return props;\n};\n\nconst actionCreators = {\n  getTickets: actions.getTickets,\n  handleSortBClick: actions.handleSortBClick,\n  filterTickets: actions.filterTickets,\n};\n\nclass SearchWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { transFilter, getTickets, sortWith } = this.props;\n    getTickets(transFilter, sortWith);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { transFilter, sortWith, tickets, filterTickets } = this.props;\n    if (\n      transFilter !== prevProps.transFilter ||\n      sortWith !== prevProps.sortWith ||\n      tickets !== prevProps.tickets\n    ) {\n      filterTickets({ transFilter, sortWith, tickets });\n    }\n  }\n\n  render() {\n    const {\n      ticketsStatus,\n      filteredTickets,\n      sortWith: { sortWith },\n      handleSortBClick,\n    } = this.props;\n    return (\n      <OutPutWindowWrapper>\n        <div>\n          <Button\n            className=\"OutPut-button\"\n            onClick={() => {\n              handleSortBClick('price');\n            }}\n            type={sortWith === 'price' ? 'primary' : ''}\n          >\n            Дешевый\n          </Button>\n          <Button\n            className=\"OutPut-button\"\n            onClick={() => {\n              handleSortBClick('speed');\n            }}\n            type={sortWith === 'speed' ? 'primary' : ''}\n          >\n            Быстрый\n          </Button>\n        </div>\n        {ticketsStatus === 'failure' && <div>404 not found contact admin</div>}\n        {ticketsStatus === 'requested' && (\n          <div className=\"loaderWrapper\">\n            {' '}\n            <Spin className=\"OutPut-loader\" size=\"small\" />{' '}\n          </div>\n        )}\n        {filteredTickets.length > 0 &&\n          filteredTickets\n            .slice(0, 5)\n            .map(ticket => (\n              <Ticket\n                ticketInfo={ticket}\n                key={`${ticket.price}${ticket.carrier}${ticket.segments[0].duration}${ticket.segments[1].duration}`}\n                className=\"OutPut-ticket\"\n              />\n            ))}\n      </OutPutWindowWrapper>\n    );\n  }\n}\n\nSearchWindow.propTypes = {\n  transFilter: PropTypes.objectOf(PropTypes.bool).isRequired,\n  getTickets: PropTypes.func.isRequired,\n  sortWith: PropTypes.objectOf(PropTypes.string).isRequired,\n  tickets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  ticketsStatus: PropTypes.string.isRequired,\n  filteredTickets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleSortBClick: PropTypes.func.isRequired,\n  filterTickets: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(SearchWindow);\n","import React from 'react';\nimport SearchWindow from './components/SearchWindow';\nimport MainLogo from './components/MainLogo';\nimport OutPutWindow from './components/OutPutWindow';\nimport { AppWrapper } from './components/styledComponents';\n\nfunction App() {\n  return (\n    <AppWrapper>\n      <MainLogo />\n      <SearchWindow />\n      <OutPutWindow />\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","const sort = (filteredTickets, sortWith) => {\n  if (sortWith === 'speed') {\n    const filteredAndSortedTickets = filteredTickets.sort((first, second) => {\n      const timeForward = first.segments[0].duration + first.segments[1].duration;\n      const timeBack = second.segments[0].duration + second.segments[0].duration;\n      return timeForward - timeBack;\n    });\n    return [...filteredAndSortedTickets];\n  }\n  const filteredAndSortedTickets = filteredTickets.sort(\n    (first, second) => first.price - second.price\n  );\n  return [...filteredAndSortedTickets];\n};\n\nexport const filterAndSort = (tickets, filters, sortWith) => {\n  const filteredTickets = tickets.filter(ticket => {\n    const tempFiltered = ticket.segments.map(flight => {\n      const numOfTransplantations = flight.stops.length;\n      return filters.includes(numOfTransplantations.toString());\n    });\n    return tempFiltered[0] === true && tempFiltered[1] === true;\n  });\n  return sort(filteredTickets, sortWith);\n};\n\nexport const onlySort = (tickets, sortWith) => {\n  return sort(tickets, sortWith);\n};\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as _ from 'lodash';\nimport * as actions from '../actions';\nimport { filterAndSort, onlySort } from './functionsToUse';\n\nconst transplantationFilter = handleActions(\n  {\n    [actions.handleRadio](state, { payload }) {\n      return { ...state, [payload]: !state[payload] };\n    },\n  },\n  {\n    all: true,\n    0: false,\n    1: false,\n    2: false,\n    3: false,\n  }\n);\n\nconst tickets = handleActions(\n  {\n    // eslint-disable-next-line no-shadow\n    [actions.saveTicketsToState](state, { payload: { tickets } }) {\n      return [...state, ...tickets];\n    },\n  },\n  []\n);\n\nconst sortWith = handleActions(\n  {\n    [actions.handleSortBClick](state, { payload }) {\n      return state.sortWith === payload ? state : { sortWith: payload };\n    },\n  },\n  { sortWith: 'price' }\n);\n\nconst filteredTickets = handleActions(\n  {\n    [actions.filterTickets](\n      state,\n      {\n        payload: {\n          transFilter,\n          // eslint-disable-next-line no-shadow\n          sortWith: { sortWith },\n          // eslint-disable-next-line no-shadow\n          tickets,\n        },\n      }\n    ) {\n      // переводим фильтры в нужный тип\n      const activeFilters = _.omitBy(transFilter, value => !value);\n      const activeFiltersAsArray = Object.keys(activeFilters);\n      // тут фильтр all = true -> сразу сортируем ||  Если ни 1 фильтр не выбран.\n      if (activeFiltersAsArray.includes('all') || activeFiltersAsArray.length === 0) {\n        return onlySort(tickets, sortWith);\n      }\n      // тут фильтруем и потом сортируем\n      return filterAndSort(tickets, activeFiltersAsArray, sortWith);\n    },\n  },\n  []\n);\n\nconst ticketsStatus = handleActions(\n  {\n    [actions.getTicketsStateRequest]() {\n      return 'requested';\n    },\n    [actions.getTicketsStateSuccess]() {\n      return 'success';\n    },\n    [actions.getTicketsFailure]() {\n      return 'failure';\n    },\n  },\n  'none'\n);\nexport default combineReducers({\n  transplantationFilter,\n  ticketsStatus,\n  tickets,\n  filteredTickets,\n  sortWith,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport reducers from './reducers';\nimport 'antd/dist/antd.css';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}